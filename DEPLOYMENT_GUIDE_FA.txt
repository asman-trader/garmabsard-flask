راهنمای استقرار VINOR روی سرور واقعی (Production)
=================================================

این راهنما تمام مراحل لازم برای استقرار امن و پایدار اپلیکیشن VINOR را روی دو سناریوی رایج پوشش می‌دهد:
- سناریو A: cPanel + Passenger (بدون نیاز به Nginx)
- سناریو B: Ubuntu/Debian + Nginx + Gunicorn + Systemd

پیش‌نیازها
---------
- Python 3.11
- دامنه و SSL فعال (Let’s Encrypt یا گواهی معتبر)
- دسترسی SSH (برای سناریو B) یا دسترسی به cPanel (برای سناریو A)
- فضای کار پروژه (مثلاً: /home/USER/myapp یا /var/www/vinor)

ساختار مهم پروژه
----------------
- passenger_wsgi.py: ورودی WSGI برای Passenger
- app/__init__.py: App Factory
- requirements.txt: وابستگی‌ها
- instance/: مسیر داده/لاگ‌های زمان اجرا (persist)
- instance/data/vapid.json: محل امن نگهداری کلیدهای VAPID برای Push (در صورت تنظیم)

نکته امنیتی مهم
---------------
- SECRET_KEY را در محیط Production از متغیر محیطی ست کنید و هرگز در مخزن قرار ندهید.
- SESSION_COOKIE_SECURE=1 را برای دامنه‌های HTTPS فعال کنید.

کلیدهای Web Push (VAPID)
------------------------
برای کارکرد اعلان‌های Push در Production باید کلیدها تنظیم شوند. دو روش:
1) از طریق متغیرهای محیطی وب‌سرور (Passenger/Nginx)
2) از طریق فایل پایدار instance/data/vapid.json (این پروژه به‌صورت خودکار اگر Env نبود از این فایل می‌خواند)

تولید کلیدها (یک‌بار)
---------------------
روی هر ماشین لینوکسی:

python - << 'PY'
from base64 import urlsafe_b64encode
from cryptography.hazmat.primitives.asymmetric import ec
key = ec.generate_private_key(ec.SECP256R1())
pn = key.public_key().public_numbers()
x = pn.x.to_bytes(32,'big'); y = pn.y.to_bytes(32,'big')
pub = urlsafe_b64encode(b'\x04'+x+y).decode('ascii').rstrip('=')
priv = urlsafe_b64encode(key.private_numbers().private_value.to_bytes(32,'big')).decode('ascii').rstrip('=')
print('PUBLIC=', pub); print('PRIVATE=', priv)
PY

مقدار PUBLIC/PRIVATE را یادداشت کنید. مقدار VAPID_SUB را معمولاً ایمیل پشتیبانی قرار دهید مثل mailto:support@your-domain

روش ذخیره پایدار (پیشنهادی)
---------------------------
mkdir -p instance/data
cat > instance/data/vapid.json << 'JSON'
{
  "VAPID_PUBLIC_KEY": "PASTE_PUBLIC",
  "VAPID_PRIVATE_KEY": "PASTE_PRIVATE",
  "VAPID_SUB": "mailto:admin@your-domain"
}
JSON

این فایل توسط passenger_wsgi.py خوانده می‌شود و در نبود EnvVars، کلیدها را به اپ تزریق می‌کند؛ بنابراین ری‌استارت/به‌روزرسانی باعث حذف کلیدها نمی‌شود.

سناریو A: استقرار روی cPanel + Passenger
---------------------------------------
1) نصب وابستگی‌ها (داخل ویرچوال‌انv)
source /home/USER/virtualenv/myapp/3.11/bin/activate && cd /home/USER/myapp
pip install -U pip && pip install -r requirements.txt

2) تنظیم .htaccess
دو رویکرد دارید:
- اگر Document Root دامنه public_html است و می‌خواهید Passenger را به /myapp نگاشت کنید:

cat > /home/USER/public_html/.htaccess << 'HT'
# Force HTTPS (اختیاری ولی توصیه)
RewriteEngine On
RewriteCond %{HTTPS} !=on
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

PassengerAppRoot /home/USER/myapp
PassengerBaseURI /
PassengerAppType wsgi
PassengerStartupFile passenger_wsgi.py
PassengerPython /home/USER/virtualenv/myapp/3.11/bin/python
HT

- اگر Document Root خود دامنه روی /home/USER/myapp است:

cat > /home/USER/myapp/.htaccess << 'HT'
# Force HTTPS (اختیاری)
RewriteEngine On
RewriteCond %{HTTPS} !=on
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

PassengerAppType wsgi
PassengerStartupFile passenger_wsgi.py
PassengerPython /home/USER/virtualenv/myapp/3.11/bin/python
HT

3) تنظیم کلیدهای VAPID
- یا EnvVars را در .htaccess اضافه کنید (اختیاری)،
- یا طبق بخش «روش ذخیره پایدار»، فایل instance/data/vapid.json را بسازید (توصیه‌شده).

4) ری‌استارت Passenger
cd /home/USER/myapp && mkdir -p tmp && touch tmp/restart.txt

5) تست سریع
curl -sS https://your-domain/api/push/config   # باید {"publicKey":"..."} برگرداند

سناریو B: Nginx + Gunicorn + Systemd (Ubuntu/Debian)
---------------------------------------------------
1) نصب وابستگی‌ها و راه‌اندازی Gunicorn
cd /var/www/vinor
python3 -m venv .venv
. .venv/bin/activate
pip install -U pip && pip install -r requirements.txt

2) فایل‌های محیطی (اختیاری)
- ساخت instance/data/vapid.json (توصیه‌شده)
- یا export متغیرهای زیر قبل از اجرای سرویس:
  - VAPID_PUBLIC_KEY
  - VAPID_PRIVATE_KEY
  - VAPID_SUB
  - SESSION_COOKIE_SECURE=1

3) Systemd Unit
sudo tee /etc/systemd/system/vinor.service >/dev/null << 'UNIT'
[Unit]
Description=Vinor (Flask) via gunicorn
After=network.target

[Service]
User=www-data
WorkingDirectory=/var/www/vinor
Environment=SESSION_COOKIE_SECURE=1
ExecStart=/var/www/vinor/.venv/bin/gunicorn -w 3 -b 127.0.0.1:8000 'app:create_app()'
Restart=always

[Install]
WantedBy=multi-user.target
UNIT

sudo systemctl daemon-reload
sudo systemctl enable vinor
sudo systemctl restart vinor

4) Nginx (HTTPS + Proxy)
server {
  listen 80;
  server_name your-domain.com;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name your-domain.com;
  # ssl_certificate ...; ssl_certificate_key ...;

  location / {
    proxy_pass         http://127.0.0.1:8000;
    proxy_set_header   Host              $host;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
  }
}

آزمایش و راه‌اندازی Push
------------------------
1) بررسی کلید عمومی:
  curl -sS https://your-domain/api/push/config
  خروجی باید شامل publicKey باشد.

2) فعال‌سازی Push در مرورگر (فقط روی HTTPS یا localhost):
  - سایت را باز کنید و «فعال‌سازی اعلان» را بزنید
  - سپس بررسی مشترک‌ها:
    curl -sS https://your-domain/api/push/subs   # باید count > 0 شود

3) ارسال تست از پنل ادمین:
  https://your-domain/admin/push-test
  در صورت موفقیت، اعلان سیستم دریافت می‌کنید.

4) ارسال همگانی:
  در پنل «ارسال اعلان همگانی» → باید «X پوش ارسال شد» > 0 باشد.

رفع اشکال پرتکرار
-----------------
- publicKey خالی است:
  - EnvVars به اپ نرسیده‌اند یا vapid.json ساخته نشده. 
  - passenger_wsgi.py در این پروژه از instance/data/vapid.json هم می‌خواند؛ فایل را بسازید و Passenger را ری‌استارت کنید.

- NO_SUBSCRIBERS:
  هنوز هیچ مرورگری سابسکرایب نشده. در سایت (HTTPS) «فعال‌سازی اعلان» را بزنید.

- MISSING_VAPID_PRIVATE_KEY:
  کلید خصوصی تنظیم نشده. EnvVars یا vapid.json را بررسی کنید.

- Push در HTTP کار نمی‌کند:
  استاندارد Web Push فقط روی HTTPS یا localhost.

- 502/500 در cPanel:
  tail -n 200 ~/logs/*error*.log را بررسی کنید. اگر مسیر Python یا AppRoot اشتباه است، در .htaccess اصلاح کنید.

امنیت و نگه‌داری
----------------
- SECRET_KEY را از Env بگیرید.
- SESSION_COOKIE_SECURE=1 روی HTTPS.
- لاگ‌ها در instance/logs/ نگهداری می‌شوند.
- برای به‌روزرسانی کد: pull یا upload → tmp/restart.txt → تست.

چک‌لیست سریع (cPanel)
---------------------
source /home/USER/virtualenv/myapp/3.11/bin/activate && cd /home/USER/myapp
pip install -U pip && pip install -r requirements.txt
mkdir -p instance/data
# vapid.json را با کلیدهای واقعی بسازید
mkdir -p tmp && touch tmp/restart.txt
curl -sS https://your-domain/api/push/config

چک‌لیست سریع (Nginx)
--------------------
cd /var/www/vinor && python3 -m venv .venv && . .venv/bin/activate
pip install -U pip && pip install -r requirements.txt
mkdir -p instance/data && # vapid.json را بسازید
sudo systemctl restart vinor && sudo systemctl status vinor --no-pager
curl -sS https://your-domain/api/push/config

موفق باشید! 🌱
